name: Build gcc

on:
  workflow_dispatch:
    inputs:
      gcc_version:
        description: 'GCC version to build'
        required: true
        default: '15'
        type: string
      libc:
        description: 'Libc to use'
        required: true
        type: choice
        options:
        - gnu
        - musl
      libc_versions:
        description: 'JSON array of libc versions for matrix'
        required: true
        type: string

permissions:
  # Required for uploading GitHub releases
  contents: write
  # Required for build provenance attestation
  id-token: write
  attestations: write

env:
  SCRIPTS_DIR: ${{ github.workspace }}/.github/workflows/gcc
  GCC_VERSION: ${{ github.event.inputs.gcc_version }}
  LIBC: ${{ github.event.inputs.libc }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        libc_version: ${{ fromJson(github.event.inputs.libc_versions) }}
      fail-fast: false  # Continue running other matrix jobs even if one fails
    env:
      LIBC_VERSION: ${{ matrix.libc_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      
      - name: Install Dependencies
        run: $SCRIPTS_DIR/step-1_install_dependencies
      
      - name: Build crosstool-NG
        run: $SCRIPTS_DIR/step-2_build_crosstool_ng
      
      - name: Configure Toolchain
        run: $SCRIPTS_DIR/step-3_configure_toolchain
      
      - name: Build Toolchain
        run: $SCRIPTS_DIR/step-4_build_toolchain
      
      - name: Package Toolchain
        run: $SCRIPTS_DIR/step-5_package_toolchain
      
      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v3.0.0
        with:
          subject-path: |
            ${{ env.ARTIFACTS_DIR }}/*.tar.xz
            ${{ env.WORK_DIR }}/build.log

      - name: Upload Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: $SCRIPTS_DIR/step-6_upload_release
